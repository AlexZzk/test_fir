查看分支：git branch

创建分支：git branch <name>

切换分支：git checkout <name>

创建+切换分支：git checkout -b <name>

合并某分支到当前分支：git merge <name>

删除分支：git branch -d <name>

查看分支合并图：git log --graph

git merge --no-ff -m "notes" branch_name     -------------- This way will show all changes in every branch. It's better than the "FAST FORWARD:wq"

新建用户名及邮箱：git config --global user.name(user.email)
其中，如果只是设置某一个仓库下的用户名，不改变其它仓库使用的用户名，则不加--global参数。


对于部分机器，在使用git时需要每次输入用户名及密码，可以使用以下命令：
git config --global credential.helper store
使用上述命令后，再输入一次用户名及密码，之后再进行操作时，就不需要再输入。
原因：会在你本地生成一个文本，上边记录你的账号和密码。


git 中合并代码的两种方式
------------git merge-------------git rebase----------
1、git merge:
在进行git merge操作时，以下列分支时间线做解释：
master：c1<----c3<-----c5;
dev:    c1<----c2<-----c4;
在进行两个分支合并时，合并到master的版本节点：c1<---<c2<---c3<---c4<---c5<---c6;
2、git rebase:
对于上述git版本节点，使用rebase操作步骤如下：
git checkout dev;
git rebase master;# 将dev上的c2、c5在master分支上做一次衍合处理
# git提示出现了代码冲突，此处为之前埋下的冲突点，处理完毕后
git add readme # 添加冲突处理后的文件
git rebase --continue # 加上--continue参数让rebase继续处理.
使用rebase合并之后，master上的节点将变为c1<--c3<--c5<--c2<--<c4，并且不会新增合并后的处理节点。
